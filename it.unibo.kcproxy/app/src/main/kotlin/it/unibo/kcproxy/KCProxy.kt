/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package it.unibo.kcproxy

import com.diogonunes.jcolor.AnsiFormat
import com.diogonunes.jcolor.Attribute
import it.unibo.kcproxy.configuration.ConfigLoader
import it.unibo.kcproxy.proxies.ProxyConfigurationBuilder
import it.unibo.kcproxy.proxies.ProxyContainer
import kotlinx.coroutines.runBlocking

fun main() {
    println("______ _________________                             \n" +
            "___  //_/_  ____/__  __ \\________________  ______  __\n" +
            "__  ,<  _  /    __  /_/ /_  ___/  __ \\_  |/_/_  / / /\n" +
            "_  /| | / /___  _  ____/_  /   / /_/ /_>  < _  /_/ / \n" +
            "/_/ |_| \\____/  /_/     /_/    \\____//_/|_| _\\__, /  \n" +
            "                                            /____/   ")

    val green = AnsiFormat(Attribute.GREEN_TEXT())
    val yellow = AnsiFormat(Attribute.YELLOW_TEXT())

    println(yellow.format("\t\t%% KCProxy | Loading configuration..."))
    var configs = ConfigLoader.load().getEntries()
    println(green.format("\t\t%% KCProxy | Completed loading configuration"))

    var proxies = ProxyConfigurationBuilder.buildProxies(configs)
    println(green.format("\t\t%% KCProxy | All proxies are builded"))

    ProxyContainer.registerAll(proxies)
    println(green.format("\t\t%% KCProxy | All proxies are registered"))

    var infos : Pair<Int, Int>
    runBlocking {
        infos = ProxyContainer.startAll()
        println(green.format("\t\t%% KCProxy | Started ${infos.first}/${infos.second} proxies"))
    }

    if(infos.first != 0) {
        println(yellow.format("\t\t%% KCProxy | Press a key or CTRL+C/D to stop"))
        readLine()
        ProxyContainer.stopAll()
    }
    println(green.format("\t\t%% KCProxy | Terminated"))
}
