System basicsonar

Dispatch updatesonarstate : updatesonarstate(X)

Context ctxsonar ip[host="localhost" port=8003]

QActor sonaractor context ctxsonar {
	
	[# 
		val sonar = it.unibo.basicdevices.DeviceManager.requestDevice("outsonar")
		var distance : Int
		
		if(sonar == null) {
			println("$name | unable to use the sonar")
			System.exit(-1)
		}
		
		sonar as it.unibo.basicsonar.Sonar
	#]
	
	State s0 initial {
		println("$name | started")
		[# distance = sonar.readDistance() #]
	} Goto work
	
	State work {
		[# distance = sonar.readDistance() #]
		updateResource[# distance.toString() #]
		println("$name | sonar distance : ${distance}")
	} Transition t0
		whenMsg  updatesonarstate -> work
	
}